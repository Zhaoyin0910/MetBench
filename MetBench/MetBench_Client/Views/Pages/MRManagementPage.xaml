<Page x:Class="MetBench_Client.Views.Pages.MRManagementPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MetBench_Client.Views.Pages"
      xmlns:s="https://github.com/canton7/Stylet"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns:models="clr-namespace:MetBench_Domain;assembly=MetBench_Domain"
      xmlns:models1="clr-namespace:MetBench_Client.Models"
      xmlns:viewmodels="clr-namespace:MetBench_Client.ViewModels" 
      xmlns:hc="https://handyorg.github.io/handycontrol"
      mc:Ignorable="d" 
      d:DataContext="{d:DesignInstance viewmodels:MRManagementViewModel}"
      d:DesignHeight="800"
      d:DesignWidth="1000"
      
      d:Background="{DynamicResource ApplicationBackgroundBrush}"
      Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      Title="MRManagementPage">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="3*" />
            <RowDefinition Height="40"/>
            <RowDefinition Height="3*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" >
            <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0 3 0 5">
                    <TextBlock Text="ApplicationName" VerticalAlignment="Center" Margin="15 0 0 0"/>
                    <TextBox Text="{Binding ViewModel.ApplicationNameBoxText,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" s:View.ActionTarget="{Binding ViewModel}" Margin="10 0 0 0" Width="150" />
                    <ui:Button Appearance="Info" Content="Query" Margin="5 0 0 0" s:View.ActionTarget="{Binding ViewModel}"
                    Command="{s:Action reload_ItemsSource}"/>
                </StackPanel>

                <ui:DataGrid  LoadingRow="dataGrid_LoadingRow" BorderBrush="LightGray"  BorderThickness="2" MaxHeight="320" Margin="10 0 10 10"  FontSize="15" HeadersVisibility="Column"  SelectedItem="{Binding ViewModel.DataGridSelectItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" x:Name="datagrid"  ItemsSource="{Binding ViewModel.Data,UpdateSourceTrigger=PropertyChanged}"  AutoGenerateColumns="False" CanUserAddRows="False" AutomationProperties.AutomationId="DataGrid_MR"
                    s:View.ActionTarget="{Binding ViewModel}"
                    MouseDoubleClick="{s:Action show}"
                  >
                    <!--进行datagrid的TextColumn 进行居中-->
                    <DataGrid.Resources>
                        <Style x:Key="CenteredTextBlockStyle" TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn  Width="70"  MinWidth="10" IsReadOnly="True" >
                            <DataGridTemplateColumn.Header>
                                <TextBlock Text="Number" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGridRow}}, Path=Header}"  HorizontalAlignment="Center" VerticalAlignment="Center" ></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn >

                        <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding Description}" Width="250" IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Description"></TextBlock>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding Context}" Width="250" IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Context"></TextBlock>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding Constraint}" Width="200" IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Constraint"></TextBlock>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding OrderOfMR}" Width="200" IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="OrderOfMR"></TextBlock>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="InputPattern"></TextBlock>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate >
                                <DataTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalAlignment="Center" VerticalContentAlignment="Center">
                                        <Image Source="{Binding InputPatternImagepath}" />
                                    </ScrollViewer>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="OutputPattern"></TextBlock>
                            </DataGridTemplateColumn.Header>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalAlignment="Center" VerticalContentAlignment="Center">
                                        <Image Source="{Binding OutputPatternImagepath}" />
                                    </ScrollViewer>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding ApplicationName}" Width="200" IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="ApplicationName"></TextBlock>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding DomainName}" Width="200" IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="DomainName"></TextBlock>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>


                        <DataGridTemplateColumn  Width="200" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Operation"></TextBlock>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ui:Button  Width="100" Height="50" FontSize="14" Content="Execute MT" HorizontalAlignment="Center" AutomationProperties.AutomationId="Button_MT"
                                     Appearance="Primary"
                                     Icon="{ui:SymbolIcon CalculatorArrowClockwise24}"
                                     Command="{s:Action btn_MTExcute}"
                                     CommandParameter="{Binding IdMR}" 
                                     />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </ui:DataGrid>

            </StackPanel>
            <!--<ui:AutoSuggestBox PlaceholderText="Search..."/>
            <DataGrid   LoadingRow="dataGrid_LoadingRow" BorderBrush="LightGray"  BorderThickness="2" MaxHeight="320" Margin="10 0 10 10"  FontSize="15" HeadersVisibility="Column"  SelectedItem="{Binding ViewModel.DataGridSelectItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" x:Name="datagrid"  ItemsSource="{Binding ViewModel.Data,UpdateSourceTrigger=PropertyChanged}"  AutoGenerateColumns="False" CanUserAddRows="False" AutomationProperties.AutomationId="DataGrid_MR"
                    s:View.ActionTarget="{Binding ViewModel}"
                    MouseDoubleClick="{s:Action show}"
                  >
            -->
            <!--进行datagrid的TextColumn 进行居中-->
            <!--
            <DataGrid.Resources>
                <Style x:Key="CenteredTextBlockStyle" TargetType="{x:Type TextBlock}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn  Width="70"  MinWidth="10" IsReadOnly="True" >
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Number" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGridRow}}, Path=Header}"  HorizontalAlignment="Center" VerticalAlignment="Center" ></TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn >

                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding Description}" Width="250" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Description"></TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding Context}" Width="250" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Context"></TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding Constraint}" Width="200" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Constraint"></TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding OrderOfMR}" Width="200" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="OrderOfMR"></TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTemplateColumn IsReadOnly="True">
                    <DataGridTemplateColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="InputPattern"></TextBlock>
                    </DataGridTemplateColumn.Header>

                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalAlignment="Center" VerticalContentAlignment="Center">
                                <Image Source="{Binding InputPatternImagepath}" />
                            </ScrollViewer>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn IsReadOnly="True">
                    <DataGridTemplateColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="OutputPattern"></TextBlock>
                    </DataGridTemplateColumn.Header>

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalAlignment="Center" VerticalContentAlignment="Center">
                                <Image Source="{Binding OutputPatternImagepath}" />
                            </ScrollViewer>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding ApplicationName}" Width="200" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="ApplicationName"></TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <DataGridTextColumn ElementStyle="{StaticResource CenteredTextBlockStyle}"  Binding="{Binding DomainName}" Width="200" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="DomainName"></TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>


                <DataGridTemplateColumn  Width="200" IsReadOnly="True">
                    <DataGridTemplateColumn.Header>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Operation"></TextBlock>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ui:Button  Width="100" Height="50" FontSize="14" Content="Execute MT" HorizontalAlignment="Center" AutomationProperties.AutomationId="Button_MT"
                                     Appearance="Primary"
                                     Icon="{ui:SymbolIcon CalculatorArrowClockwise24}"
                                     Command="{s:Action btn_MTExcute}"
                                     CommandParameter="{Binding IdMR}" 
                                     />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>-->
        </Grid>
        <Grid Grid.Row="1">
            <hc:Pagination x:Name="pagination"  Margin=" 0 2 5 0"  Height="30" IsJumpEnabled="True" Visibility="Visible" HorizontalAlignment="Right" MaxPageCount="{Binding ViewModel.MaxPageCount,UpdateSourceTrigger=PropertyChanged}" PageIndex="{Binding ViewModel.PageIndex,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
        DataCountPerPage="{Binding ViewModel.DataCountPerPage,UpdateSourceTrigger=PropertyChanged}" MaxPageInterval="3" s:View.ActionTarget="{Binding ViewModel}" PageUpdated="{s:Action reload_ItemsSource}" VerticalAlignment="Center"  >
                <!--<hc:Interaction.Triggers>
         <hc:EventTrigger EventName="PageUpdated">
             <hc:EventToCommand s:View.ActionTarget="{Binding ViewModel}"  Command="{s:Action reload_ItemsSource}" PassEventArgsToCommand="True"/>
         </hc:EventTrigger>
     </hc:Interaction.Triggers>-->
            </hc:Pagination>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <StackPanel  Grid.Row="0" x:Name="stackpanel1" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Text="IdMR" Margin="50 0 0 0" VerticalAlignment="Center" />
                    <ui:TextBox  x:Name="txbIdMR" Margin="5 0 0 0"  VerticalContentAlignment="Center" Width="250"
             ClearButtonEnabled="False"
             IsReadOnly="True"
             Text="{Binding ViewModel.IdMR,UpdateSourceTrigger=PropertyChanged}"   
             />
                </StackPanel>
                <StackPanel  Grid.Row="1" x:Name="stackpanel2" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Text="Description" Margin="10 0 0 0" VerticalAlignment="Center" />
                    <ui:TextBox  x:Name="rtxbDescription" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="250" 
                TextWrapping="Wrap"
                Text="{Binding ViewModel.Description,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                GotFocus="textBox_GotFocus"
                LostFocus="textBox_LostFocus"
                />
                </StackPanel>
                <StackPanel  Grid.Row="2" x:Name="stackpanel3" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Text="Context" Margin="35 0 0 0" VerticalAlignment="Center" />
                    <ui:TextBox  x:Name="txbContext" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="250" 
                TextWrapping="Wrap"
                Text="{Binding ViewModel.Context,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                GotFocus="textBox_GotFocus"
                LostFocus="textBox_LostFocus"
                />
                </StackPanel>
                <StackPanel  Grid.Row="3" x:Name="stackpanel4" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Text="Constraint" Margin="20 0 0 0" VerticalAlignment="Center" />
                    <ui:TextBox  x:Name="txbConstraint" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="250" 
                TextWrapping="Wrap"
                Text="{Binding ViewModel.Constraint,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                GotFocus="textBox_GotFocus"
                LostFocus="textBox_LostFocus"
                />
                </StackPanel>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <StackPanel  Grid.Row="0" Grid.Column="1" x:Name="stackpanel5" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Text="InputPattern" Margin="50 0 0 0" VerticalAlignment="Center" />
                    <ui:TextBox  x:Name="txbInputPattern" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="200"
             TextWrapping="Wrap"
             Text="{Binding ViewModel.InputPattern,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
             GotFocus="textBox_GotFocus"
             LostFocus="textBox_LostFocus"
             />
                    <TextBlock Text="*" Foreground="Red" Margin="5 0 0 0" VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel  Grid.Row="1" Grid.Column="1" x:Name="stackpanel6" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Text="OutputPattern" Margin="40 0 0 0" VerticalAlignment="Center" />
                    <ui:TextBox  x:Name="txbOutputPattern" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="200"
                TextWrapping="Wrap"
                Text="{Binding ViewModel.OutputPattern,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                GotFocus="textBox_GotFocus"
                LostFocus="textBox_LostFocus"
                />
                    <TextBlock Text="*" Foreground="Red" Margin="5 0 0 0" VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel  Grid.Row="2" Grid.Column="1" x:Name="stackpanel7" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Text="DimensionOfInputPattern" Margin="15 0 0 0" VerticalAlignment="Center" />
                    <ui:TextBox  x:Name="txbDimensionOfInputPattern" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="150"
                Text="{Binding ViewModel.DimensionOfInputPattern,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                GotFocus="textBox_GotFocus"
                LostFocus="textBox_LostFocus"
                />
                    <TextBlock Text="*" Foreground="Red" Margin="5 0 0 0" VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel  Grid.Row="3" Grid.Column="1" x:Name="stackpanel8" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock  Text="DimensionOfOutputPattern" Margin="5 0 0 0" VerticalAlignment="Center" />
                    <ui:TextBox  x:Name="txbDimensionOfOutputPattern" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="150"
             Text="{Binding ViewModel.DimensionOfOutputPattern,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
             GotFocus="textBox_GotFocus"
             LostFocus="textBox_LostFocus"
             />
                    <TextBlock Text="*" Foreground="Red" Margin="5 0 0 0" VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <StackPanel  Grid.Row="0" Grid.Column="2" x:Name="stackpanel9" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="ApplicationName" Margin="5 0 0 0" VerticalAlignment="Center" />
                    <ComboBox  Margin="5 0 0 0" MaxWidth="140"  Text="{Binding ViewModel.SelectedText,UpdateSourceTrigger=PropertyChanged}" IsEditable="True" ItemsSource="{Binding ViewModel.ApplicationExs,UpdateSourceTrigger=PropertyChanged}"
                               ScrollViewer.VerticalScrollBarVisibility="Visible"
                               s:View.ActionTarget="{Binding ViewModel}"
                               >
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type models1:ApplicationEx}">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsChecked}" />
                                    <TextBlock  Margin="5 0 0 0" Text="{Binding Application.Name}"  VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock Text="*" Foreground="Red" Margin="5 0 0 0" VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel  Grid.Row="1" Grid.Column="2" x:Name="stackpanel10" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="OrderOfMR"  Margin="55 0 0 0" VerticalAlignment="Center" />
                    <ComboBox  x:Name="cmbDimensionOfOutputPattern" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="110"
              SelectedIndex="{Binding ViewModel.OrderOfMR_ComboBoxSelectedIndex,UpdateSourceTrigger=PropertyChanged}"
              SelectedValue="{Binding ViewModel.OrderOfMR_ComboBoxSelectedValue,UpdateSourceTrigger=PropertyChanged}"
              ItemsSource="{Binding ViewModel.OrderOfMRList,UpdateSourceTrigger=PropertyChanged}"
              />
                    <TextBlock Text="*" Foreground="Red" Margin="5 0 0 0" VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel  Grid.Row="2" Grid.Column="2" x:Name="stackpanel11" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="RepresentationType"  Margin="0 0 0 0" VerticalAlignment="Center" />
                    <ComboBox  x:Name="cmbRepresentationType" Margin="5 0 0 0" VerticalContentAlignment="Center" Width="110"
              ItemsSource="{Binding ViewModel.RepresentationTypeList,UpdateSourceTrigger=PropertyChanged}"
              SelectedIndex="{Binding ViewModel.RepresentationType_ComboBoxSelectedIndex}"
              />
                    <TextBlock Text="*" Foreground="Red" Margin="5 0 0 0" VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
        </Grid>
        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ui:Button Grid.Column="0" Margin="70,0,0,0" Appearance="Primary" Content="Add" Width="100" Height="40"
           s:View.ActionTarget="{Binding ViewModel}"
           Command="{s:Action btnAdd_Click}"
           Icon="{ui:SymbolIcon GuestAdd24}"
           />
                <ui:Button Grid.Column="1" Margin="70,0,0,0" Appearance="Primary" Content="Edit" Width="100" Height="40"
           s:View.ActionTarget="{Binding ViewModel}"
           Command="{s:Action btnModify_Click}"
           Icon="{ui:SymbolIcon CalendarEdit24}"
           />
                <ui:Button Grid.Column="2" Margin="70,0,0,0" Appearance="Primary" Content="Del" Width="100" Height="40"
           s:View.ActionTarget="{Binding ViewModel}"
           Command="{s:Action btnDelect_Click}"
           Icon="{ui:SymbolIcon DeleteDismiss24}"
           />
                <ui:Button Grid.Column="3" Margin="70,0,0,0" Appearance="Primary" Content="Reset" Width="100" Height="40"
           s:View.ActionTarget="{Binding ViewModel}"
           Command="{s:Action btnCancel_Click}"
           Icon="{ui:SymbolIcon TextBulletListSquareSettings20}"
           />
            </Grid>
            <Grid Grid.Row="1">
                <ProgressBar IsIndeterminate="{Binding ViewModel.IsIndeterminate,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Visibility="{Binding ViewModel.Visibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"    Height="15"  BorderThickness="2" />
            </Grid>
            <!--<ui:Button Grid.Column="0" Margin="70,0,0,0" Appearance="Primary" Content="Add" Width="100" Height="40"
                       s:View.ActionTarget="{Binding ViewModel}"
                       Command="{s:Action btnAdd_Click}"
                       Icon="{ui:SymbolIcon GuestAdd24}"
                       />
            <ui:Button Grid.Column="1" Margin="70,0,0,0" Appearance="Primary" Content="Edit" Width="100" Height="40"
                       s:View.ActionTarget="{Binding ViewModel}"
                       Command="{s:Action btnModify_Click}"
                       Icon="{ui:SymbolIcon CalendarEdit24}"
                       />
            <ui:Button Grid.Column="2" Margin="70,0,0,0" Appearance="Primary" Content="Del" Width="100" Height="40"
                       s:View.ActionTarget="{Binding ViewModel}"
                       Command="{s:Action btnDelect_Click}"
                       Icon="{ui:SymbolIcon DeleteDismiss24}"
                       />
            <ui:Button Grid.Column="3" Margin="70,0,0,0" Appearance="Primary" Content="Reset" Width="100" Height="40"
                       s:View.ActionTarget="{Binding ViewModel}"
                       Command="{s:Action btnCancel_Click}"
                       Icon="{ui:SymbolIcon TextBulletListSquareSettings20}"
                       />-->
        </Grid>
    </Grid>
</Page>
